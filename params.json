{"name":"Minesolver","tagline":"An HTML5 Minesweeper game and solver","body":"<header>\r\n\t<h1>Solving Minesweeper</h1>\r\n\t<h2>A game of probabilities</h2>\r\n\t<h2>by Alsonel Rosario</h2>\r\n\t<nav><ul>\r\n\t\t<li>\r\n\t\t\t<a href=\"#intro\">Introducing Minesweeper</a>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href=\"#intro-setup\">The Setup</a></li>\r\n\t\t\t\t<li><a href=\"#intro-rules\">The Rules</a></li>\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t\t<li><a href=\"#action\">The Game in Action</a></li>\r\n\t\t<li><a href=\"#calc\">Calculation</a></li>\r\n\t\t<li><a href=\"#post\">Post-mortem</a></li>\r\n\t</ul></nav>\r\n</header>\r\n<article>\r\n\t<section id=\"intro\">\r\n\t\t<h2>Introducing Minesweeper</h2>\r\n\t\t<p>Minesweeper is a game usually intended for one player, though multiplayer variants exist. It looks like a board game but it's best played digitally due to how long it would take to set up the grid in a physical space, as well as the addition of some useful mechanics only feasible in a digital space. Gameplay-wise, imagine Battleship but instead of trying to hit a target you're trying to avoid it.</p>\r\n\t\t<h3 id=\"intro-setup\">The Setup</h3>\r\n\t\t<p>The player is given a grid. The grid is filled with mines indiscriminately hidden and the player must successfully uncover every single non-mine grid space.</p>\r\n\t\t<h4>The Grid and Mines</h4>\r\n\t\t<p>The Minesweeper grid is usually a rectangular arrangement of squares, though variants exists where the grid consists of non-rectangular shapes like triangles or hexagons. Often the player can choose the dimensions of the grid as well as how many mines are hidden in the grid; the default grid sizes and mine counts presented in Microsoft Minesweeper are 9&times;9 with 10 mines, 16&times;16 with 40 mines, and 30&times;16 with 99 mines.</p>\r\n\t\t<p>Microsoft Minesweeper specifically allows setting custom rectangular grid sizes from 8&times;8 to 30&times;24 and the number of mines from 10 to 667, though mine count for a <var>W</var>&times;<var>H</var> field is said to be capped at <var>(W-1)</var>&times;<var>(B-1)</var>.\r\n\t\t<p>For the purposes of this project, the grid will be a rectangular arrangement of square spaces.</p>\r\n\t\t<h3 id=\"intro-rules\">The Rules</h3>\r\n\t\t<p>The player chooses an unrevealed grid space. If a mine is buried under it revealing the space triggers it and the game is over, otherwise the player may continue to reveal spaces. The player wins when all non-mine spaces have been revealed before triggering a mine.</p>\r\n\t\t<h4>Digital Additions</h4>\r\n\t\t<p>Two particular additions can be found in digital versions of the game that would be difficult to implement in a physical space version. A timer keeps track of how long one has been playing and a revealed space will display a number signifying how many spaces directly adjacent to it contain buried mines, if there are any adjacent to it at all. A third addition, the <em>flood fill</em>, is often added for convenience.</p>\r\n\t\t<h5>The Timer</h5>\r\n\t\t<p>The timer keeps track of how long one plays the game, and stops when the player wins or loses. In Minesweeper variants that feature a timer, there is also an accompanying list of rankings for given grid sizes and mine counts with win times ordered from fastest to slowest.</p>\r\n\t\t<p>Psychologically, this prioritizes faster times over higher win percentages and is outside the scope of this project. For the purposes of this project, the timer will be rendered irrelevant or removed entirely.</p>\r\n\t\t<h5>Nearby Mines</h5>\r\n\t\t<p>By virtue of being digital, most variants of Minesweeper can calculate if mines are buried under spaces adjacent to a given revealed space practically instantaneously and display the results on that space.</p>\r\n\t\t<p>This project will not only display the number of mines surrounding a space, but it will also display extra calculations about that space related to the game.</p>\r\n\t\t<h5>Flood Fill</h5>\r\n\t\t<p>When a space is revealed, if no mine is buried and there are no mines directly adjacent to that space it is considered <em>completely safe</em>. If no mine is buried but there are mines adjacent it is considered <em>safe</em>. A space housing a mine is <em>unsafe</em>. Flood filling is activated when a player reveals a <em>completely safe</em> space and will automatically reveal all nearby <em>completely safe</em> spaces. <em>Safe</em> spaces are also revealed, though the fill does not go beyond those points. In a larger grid flood fill is essential for convenience, saving time by not requiring extra clicks to reveal <em>completely safe</em> spaces.</p>\r\n\t\t<h5>Other</h5>\r\n\t\t<p>There is a particularly noteworthy addition found in Microsoft's variant of digital Minesweeper. A feature was added that guarantees the first space chosen in a new game to be <em>safe</em> or <em>completely safe</em>. What actually happens is if a mine is under the chosen space it is moved to an initially <em>safe</em> corner, starting with the top-left and going clockwise if already occupied.</p>\r\n\t\t<p>For the purposes of this project, this mine-moving behavior is not implemented in the accompanying Minesweeper game, Minimalsweeper.</p>\r\n\t</section>\r\n\t<section id=\"action\">\r\n\t\t<header class=\"unprintable\">\r\n\t\t\t<h2>Minimalsweeper</h2>\r\n\t\t\t<p class=\"highlight\"><a href=\"./minesolver.html\">Try it out!</a></p>\r\n\t\t</header>\r\n\t\t<h2>The Game in Action</h2>\r\n\t\t<p>For practical purposes, the grid will be rectangular (specifically, square for the purposes of this project) with square spaces, mine count will be known ahead of time, and timers are ignored. For a given grid size, the sampled mine count is generally assumed to be equal to the calculated cap of that size unless that grid has a default mine count in a difficulty setting of Microsoft Minesweeper. Mine placement is, for intents and purposes, randomized rather than specific layouts being intentionally designed.</p>\r\n\t\t<h3>1&times;1</h3>\r\n\t\t<p>A 1&times;1 grid is not considered practical for game purposes. Only two possibilities exist, either a mine is buried or it isn't, and it's rendered moot if one is aware of the mine count ahead of time.</p>\r\n\t\t<h3>2&times;2, cap=1</h3>\r\n\t\t<p>Another generally impractical grid size, a capped mine count of 1 results in a <span class=\"frac\"><sup>1</sup>/<sub>4</sub></span> probability of revealing the mine as the first choice. If that space is <em>safe</em> the remaining spaces each have a <span class=\"frac\"><sup>1</sup>/<sub>3</sub></span> probability of revealing the mine.</p>\r\n\t\t<p>\r\n\t\t\t<figure class=\"mc-wr\">\r\n\t\t\t\t<img src=\"2x2-0000.png\" alt=\"2&times;2, covered\" width=\"300\" height=\"300\" />\r\n\t\t\t\t<figcaption>2&times;2, no spaces revealed</figcaption>\r\n\t\t\t</figure>\r\n\t\t\t<figure class=\"mc-wr\">\r\n\t\t\t\t<img src=\"2x2-1000.png\" alt=\"2&times;2, covered\" width=\"300\" height=\"300\" />\r\n\t\t\t\t<figcaption>2&times;2, one safe space revealed</figcaption>\r\n\t\t\t</figure>\r\n\t\t</p>\r\n\t\t<p>If a <em>safe</em> space is then chosen, the remaining two spaces each have a <span class=\"frac\"><sup>1</sup>/<sub>2</sub></span> probability of revealing the mine.</p>\r\n\t\t<p>At each stage of a 2&times;2 grid, given that all <em>safe</em> spaces have one adjacent mine, it tends towards a coinflip to choose the next space.</p>\r\n\t\t<h3>3&times;3, cap=4</h3>\r\n\t\t<p>The game becomes playable on a 3&times;3 grid, though the relatively high (compared to 2&times;2) mine count of 4 results in a <span class=\"frac\"><sup>4</sup>/<sub>9</sub></span> initial chance of selecting an <em>unsafe</em> space as the first move.</p>\r\n\t\t<p>This is the last square grid where mine count limits remains under half the area of the grid.</p>\r\n\t\t<h3>4&times;4, cap=9</h3>\r\n\t\t<h3>5&times;5, cap=16</h3>\r\n\t\t<h3>6&times;6, cap=25</h3>\r\n\t\t<h3>7&times;7, cap=36</h3>\r\n\t\t<p>On square grids, once the size surpasses 3&times;3 the cap on the mine count exceeds half of the board size. While this allows for greater flexibility in choosing mine counts it also results in potentially stacking the odds against the player.</p>\r\n\t\t<h3>8&times;8, cap=49, default=10</h3>\r\n\t\t<p>8&times;8 was previously the default grid size for the \"Beginners\" difficulty level of Microsoft Minesweeper with a mine count of 10, so calculations will be done with 10 mines.</p>\r\n\t\t<h3>9&times;9, cap=64, default=10</h3>\r\n\t\t<p>9&times;9 is the current default grid size for Microsoft Minesweeper's \"Beginners\" difficulty level with a mine count of 10.</p>\r\n\t\t<h3>10&times;10, cap=81</h3>\r\n\t\t<p>10&times;10 is the largest grid size this project will play. Larger sizes will require advanced computational techniques beyond the scope of this project.</p>\r\n\t\t<p>The 10&times;10 grids played in this project will only have 10 mines buried for convenience.</p>\r\n\t\t<h3>Larger than 10&times;10</h3>\r\n\t\t<p>Larger grids have such high mine count limits that playing them with those mine counts is considered <em>unfair</em> to the player and strategy for those grids is therefore considered beyond the scope of this project.</p>\r\n\t</section>\r\n\t<section id=\"calc\">\r\n\t\t<h2>Calculation</h2>\r\n\t\t<h3>Surrounding Mines</h3>\r\n\t\t<p>As a byproduct of being primarily digital, Minesweeper offers hints to the player in the form of numbers. When a player uncovers a <em>safe</em> space, the amount of mines buried under directly adjacent spaces, covered or uncovered, is displayed on that space. Given that Minesweeper is, in essence, a game the specific locations are not given; the accompanying project respects this aspect to a degree, the only difference being that, for the purposes of this research, if a covered space containing a mine is flagged a counter denoting successfully flagged mines is updated in the inverse form \"unflagged remaining.\"</p>\r\n\t\t<h3>Potential Mines</h3>\r\n\t\t<p>Raw calculation of the probability of a covered space containing an undiscovered mine is essentially <var># of undiscovered mines</var>&div;<var># of remaining covered spaces</var>. This calculation is adjusted to account for successfully flagged spaces and is displayed under the label \"raw %age (with verified flags).\"</p>\r\n\t\t<p>Basic heuristic calculation of the probability of a covered space containing an undiscovered mine takes into account the number of surrounding mines of adjacent <em>safe</em> spaces. This calculation essentially becomes <var>K</var>&times;<var># of undiscovered mines</var>&div;<var># of remaining covered spaces</var>, where <var>K</var> is defined as the following:</p>\r\n\t\t<p class=\"math c\"><var>K</var> = 1; <br/>for every adjacent uncovered space <var>S</var>, <var>K</var> = <var>K</var>&times;<var># of mines adjacent to S</var>&div;<var># of adjacent uncovered spaces</var></p>\r\n\t</section>\r\n\t<section id=\"post\">\r\n\t\t<h2>Post-mortem</h2>\r\n\t\t<p>The testing and refinement process revealed early on that my initial calculations were wrong and the calculation of <var>K</var> is inaccurate. For the sake of time I am unable to proceed further on this for academic purposes, though I will independently update this document and the accompanying demonstration at a later date to fix calculations using information found from the research of the two cited developers below.</p>\r\n\t</section>\r\n</article>\r\n<footer class=\"c\">\r\n\t<p>&copy; 2014 Alex Rosario</p>\r\n\t<p class=\"disclaimer\">Previous significant Minesweeper algorithmic strategy research by <a href=\"http://mrgris.com/projects/minesweepr/\" target=\"_blank\">Drew Roos</a> and <a href=\"http://luckytoilet.wordpress.com/2012/12/23/2125/\" target=\"_blank\">Bai Li</a>.</p>\r\n</footer>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}